package ps.demo.controller;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.tags.Tag;
import lombok.extern.slf4j.Slf4j;
import org.slf4j.MDC;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import ps.demo.common.BaseResponse;
import ps.demo.common.StringDataResponse;
import ps.demo.dto.ApiClient;
import ps.demo.service.BusinessHandler;
import ps.demo.service.ProcessingHandler;

import java.io.IOException;
import java.util.Map;

@Tag(name = "ExcelHandlerController", description = "ExcelHandlerController")
@Slf4j
@RestController
@RequestMapping("/excel")
public class ExcelHandlerController {

    @Autowired
    private Map<String, ProcessingHandler> processingHandlerMap;
    @Autowired
    private ApplicationContext context;


    @Operation(summary = "Dynamic get handler base on the parameters")
    @GetMapping("/get")
    public BaseResponse processByType(@RequestParam(name = "type", defaultValue = "xlsx") String type) throws IOException {
        String traceId = MDC.get("traceId");
        log.info("This is the traceId either passed in from frontend traceparent or generated by io.micrometer");


        //Solution A:
        ProcessingHandler handler = processingHandlerMap.get(type+"ParsingHandler");
        handler.parse(null);

        return StringDataResponse.successWithData("xxx");
    }

}
