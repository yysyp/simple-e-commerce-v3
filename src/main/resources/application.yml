server:
  ssl:
    key-store-type: PKCS12
    key-store: classpath:keys/simpledemo.p12
    key-store-password: simpledemo.sp
    key-alias: simpledemo
    enabled: false
  port: 8080
#  originhttp:
#    port: 8080
  tomcat:
    connection-timeout: 5000 # unit is ms

spring:
  application:
    name: simple-e-commerce-v3
  profiles:
    active: dev
  #  Below config will make 404 page show as a restful json response.
  #  But the side effects is that the static resource will not able to display, so disable this
  #  web:
  #    resources:
  #      add-mappings: false
  #  mvc:
  #    throw-exception-if-no-handler-found: true
  servlet:
    multipart:
      enabled: true
      max-file-size: 10GB #Size limit for a single file. The maximum allowed size of a single uploaded file. i.e. 1MB Priority 2, This config also works for limit the upload Maximum size.
      max-request-size: 100GB #Each request total file size limit. The maximum allowed size of a complete request. i.e. 100KB Priority 1, Limit the multipart/form-data file upload Maximum size.

  datasource:
    fst:
      url: jdbc:h2:mem:ecommercedb;MODE=MYSQL
      username: sa
      password:
      driver-class-name: org.h2.Driver
      initialization-mode: embedded
      hikari:
        connectionTimeout: 30000
        idleTimeout: 600000
        maxLifetime: 1800000
    snd:
      url: jdbc:h2:mem:snd;MODE=MYSQL
      username: sa
      password:
      driver-class-name: org.h2.Driver
      initialization-mode: embedded

  h2:
    console:
      path: /h2-console
      enabled: true
      settings:
        web-allow-others: true
      trace: true
  jackson:
    time-zone: GMT+8
    date-format: yyyy-MM-dd'T'HH:mm:ss.SSSZ
  cache:
    type: jcache
    jcache:
      config: classpath:/ehcache3.xml
  data:
    mongodb:
      uri: mongodb://localhost:27017/test

mybatis-plus:
  mapper-locations: classpath*:/mapper/**/*.xml
  type-aliases-package: ps.demo.entity

springdoc:
  api-docs:
    enabled: true
    path: /v3/api-docs
  packages-to-scan: ps.demo
  show-actuator: false
  model-and-view-allowed: true
#  override-with-generic-response: true

api:
  clients:
    - name: clienta
      url: https://api.clienta
      key: 123
    - name: clientb
      url: https://api.clientb
      key: 456

---

spring:
  config:
    activate:
      on-profile: dev
  #  datasource:
  #    url: jdbc:h2:mem:ecommercedb
  #    username: sa
  #    password:
  #    driver-class-name: org.h2.Driver
  #    initialization-mode: embedded
  sql:
    init:
      encoding: utf-8
      schema-locations: classpath:schema_h2.sql
      data-locations: classpath:data_h2.sql
      mode: always

  h2:
    console:
      path: /h2-console
      enabled: true
  jpa:
    hibernate:
      ddl-auto: create-drop # Hibernate ddl auto (create, create-drop, validate, update)

#  jackson:
#    time-zone: GMT+8
#    date-format: yyyy-MM-dd'T'HH:mm:ss.SSSZ
#
#mybatis-plus:
#  mapper-locations: classpath*:/mapper/**/*.xml
#  type-aliases-package: ps.demo.entity


#https://resilience4j.readme.io/docs/getting-started-3
resilience4j.circuitbreaker:
  configs:
    default:
      registerHealthIndicator: true
      slidingWindowSize: 10
      minimumNumberOfCalls: 5
      permittedNumberOfCallsInHalfOpenState: 3
      automaticTransitionFromOpenToHalfOpenEnabled: true
      waitDurationInOpenState: 5s
      failureRateThreshold: 50
      eventConsumerBufferSize: 10
      recordExceptions:
        - org.springframework.web.client.HttpServerErrorException
        - java.util.concurrent.TimeoutException
        - java.io.IOException
      ignoreExceptions:
        - ps.demo.common.ServerErrorException
    shared:
      slidingWindowSize: 100
      permittedNumberOfCallsInHalfOpenState: 30
      waitDurationInOpenState: 1s
      failureRateThreshold: 50
      eventConsumerBufferSize: 10
      ignoreExceptions:
        - ps.demo.common.ServerErrorException
  instances:
    backendA:
      baseConfig: default
    backendB:
      registerHealthIndicator: true
      slidingWindowSize: 10
      minimumNumberOfCalls: 10
      permittedNumberOfCallsInHalfOpenState: 3
      waitDurationInOpenState: 5s
      failureRateThreshold: 50
      eventConsumerBufferSize: 10
      recordFailurePredicate: ps.demo.common.RecordFailurePredicate
resilience4j.retry:
  configs:
    default:
      maxAttempts: 3
      waitDuration: 100
      retryExceptions:
        - org.springframework.web.client.HttpServerErrorException
        - java.util.concurrent.TimeoutException
        - java.io.IOException
      ignoreExceptions:
        - ps.demo.common.ServerErrorException
  instances:
    backendA:
      baseConfig: default
    backendB:
      baseConfig: default
resilience4j.bulkhead:
  configs:
    default:
      maxConcurrentCalls: 100
  instances:
    backendA:
      maxConcurrentCalls: 10
    backendB:
      maxWaitDuration: 10ms
      maxConcurrentCalls: 20

resilience4j.thread-pool-bulkhead:
  configs:
    default:
      maxThreadPoolSize: 4
      coreThreadPoolSize: 2
      queueCapacity: 2
  instances:
    backendA:
      baseConfig: default
    backendB:
      maxThreadPoolSize: 1
      coreThreadPoolSize: 1
      queueCapacity: 1

resilience4j.ratelimiter:
  configs:
    default:
      registerHealthIndicator: true
      limitForPeriod: 1 #The number of permissions available during one limit refresh period
      limitRefreshPeriod: 1s #The period of a limit refresh. After each period the rate limiter sets its permissions count back to the limitForPeriod value
      timeoutDuration: 0 #The default wait time a thread waits for a permission
      eventConsumerBufferSize: 100
  instances:
    backendA:
      baseConfig: default
    backendB:
      limitForPeriod: 6
      limitRefreshPeriod: 500ms
      timeoutDuration: 3s
resilience4j.timelimiter:
  configs:
    default:
      cancelRunningFuture: false
      timeoutDuration: 2s
  instances:
    backendA:
      baseConfig: default
    backendB:
      baseConfig: default

